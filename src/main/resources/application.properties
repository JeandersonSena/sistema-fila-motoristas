# ===================================================================
# Configurações Principais da Aplicação
# ===================================================================
# Define o nome da aplicação (opcional, mas bom para identificação)
spring.application.name=DriverQueueSMSApp
# Diz ao Spring para usar a porta definida pela variável de ambiente PORT (fornecida pelo Railway)
server.port=${PORT:8080} # Usa a porta do Railway, ou 8080 como fallback local

# ===================================================================
# Banco de Dados PostgreSQL (Configurado via Variáveis de Ambiente Railway)
# ===================================================================
# Estas propriedades usam as variáveis injetadas automaticamente pelo Railway
# quando um serviço PostgreSQL está vinculado.
spring.datasource.url=jdbc:postgresql://${PGHOST}:${PGPORT}/${PGDATABASE}
spring.datasource.username=${PGUSER}
spring.datasource.password=${PGPASSWORD}
# Opcional: Pode-se especificar o driver, mas o Spring Boot geralmente detecta
# spring.datasource.driver-class-name=org.postgresql.Driver

# ===================================================================
# JPA / Hibernate (Configurações para PostgreSQL)
# ===================================================================
# IMPORTANTE: Define o dialeto SQL específico para PostgreSQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Ação DDL (Data Definition Language) automática ao iniciar:
# 'update': Cria/atualiza o schema no banco baseado nas entidades (@Entity).
#          Útil para o primeiro deploy no Railway criar as tabelas.
#          Para produção robusta, considere 'validate' ou 'none' e use
#          ferramentas de migração como Flyway ou Liquibase.
spring.jpa.hibernate.ddl-auto=update

# Não mostrar o SQL gerado no console em produção (reduz logs)
spring.jpa.show-sql=false
# Não formatar SQL se show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# ===================================================================
# Configuração Twilio (SEGREDOS DEVEM VIR DE VARIÁVEIS DE AMBIENTE)
# ===================================================================
# Estas propriedades serão preenchidas pelas variáveis de ambiente
# que você configurará manualmente no painel do Railway.
twilio.account-sid=${TWILIO_ACCOUNT_SID}
twilio.auth-token=${TWILIO_AUTH_TOKEN}
# Número de telefone Twilio no formato E.164 (+CódigoPaís...)
twilio.phone-number=${TWILIO_PHONE_NUMBER}

# ===================================================================
# Configuração de Logging
# ===================================================================
logging.level.root=INFO
# Nível DEBUG para os pacotes da sua aplicação ajuda a ver o que está acontecendo
logging.level.com.suaempresa.driverqueue=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=WARN
# Descomente as próximas duas linhas para ver SQL e parâmetros (muito verboso)
# logging.level.org.hibernate.SQL=DEBUG
# logging.level.org.hibernate.type.descriptor.sql=TRACE

# ===================================================================
# Configuração Thymeleaf (Templates HTML)
# ===================================================================
# Desabilitar cache em desenvolvimento/deploy inicial facilita ver alterações
spring.thymeleaf.cache=false
# Localização padrão dos templates
spring.thymeleaf.prefix=classpath:/templates/
# Sufixo padrão dos arquivos de template
spring.thymeleaf.suffix=.html
# Modo padrão do template
spring.thymeleaf.mode=HTML

# ===================================================================
# Outras Configurações (Opcional)
# ===================================================================
# Desabilita o banner artístico do Spring Boot na inicialização
# spring.main.banner-mode=off